{"ast":null,"code":"import _defineProperty from \"/home/mirantodell/Bureau/my-product/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/mirantodell/Bureau/my-product/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mirantodell/Bureau/my-product/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mirantodell/Bureau/my-product/src/Component/tableau/tableau.jsx\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport React, { Component, useState } from 'react';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nvar confirm = function confirm(props) {\n  var initial = {\n    id: null,\n    prod: '',\n    prix: ''\n  };\n\n  var _useState = useState(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var changed = function changed(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, name, value)));\n  }; // const submit = (a) => {\n  //   confirmAlert({\n  //     customUI: ({ onClose }) => {\n  //       return (  \n  //         <div className=\"custom-ui\" id=\"popup\">\n  //           <h6>Suppression Produit</h6><br/><br/>\n  //           <h6 value={ user.prod }></h6><br/><br/>\n  //         <center>\n  //           <button className=\"btn btn-dark\"\n  //             onClick={() => {\n  //               props.deleteUser(a);\n  //               onClose();\n  //             }}\n  //           >\n  //             OUI\n  //           </button><a>&nbsp;&nbsp;</a>\n  //           <button  className=\"btn btn-dark\" onClick={onClose}>NON</button>\n  //           </center>\n  //         </div>\n  //       );\n  //     }\n  //   })\n  // };\n  // const submit1 = (a) => {\n  //     confirmAlert({\n  //         customUI: ({ onClose }) => {\n  //           return (  \n  //             <div className=\"custom-ui\" id=\"popup\">\n  //               <input id=\"entree\" className=\"modif\" value={user.prod} onChange={changed}/><br/><br/>\n  //               <div id=\"erreur\"></div><br/>\n  //             <center>\n  //               <button className=\"btn btn-dark\"\n  //                 onClick={() => {\n  //                   if (isNaN(document.getElementById(\"entree\").value)) {\n  //                     var valid=\"Entrer un nombre\";\n  //                     document.getElementById('erreur').innerHTML= valid;\n  //                  } else {\n  //                     var valid=\"\";\n  //                     document.getElementById('erreur').innerHTML= valid;\n  //                     props.editRow(a);\n  //                   }\n  //                 }}\n  //               >\n  //                 Ok\n  //               </button><a>&nbsp;&nbsp;</a>\n  //               <button  className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n  //               </center>\n  //             </div>\n  //           );\n  //         }\n  //       })\n  // };\n\n\n  return React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    class: \"table table-bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    className: \"tab\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Produits\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Prix\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.users.length > 0 ? props.users.map(function (user) {\n    return React.createElement(\"tr\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, user.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, user.prod), React.createElement(\"td\", {\n      id: \"prix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, user.prix), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: function onClick() {\n        confirmAlert({\n          customUI: function customUI(_ref) {\n            var onClose = _ref.onClose;\n            return React.createElement(\"div\", {\n              className: \"custom-ui\",\n              id: \"popup\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96\n              },\n              __self: this\n            }, React.createElement(\"h6\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }, \"Suppression Produit\"), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }), React.createElement(\"h6\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, user.prod), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }), React.createElement(\"center\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: function onClick() {\n                props.deleteUser(user);\n                onClose();\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, \"OUI\"), React.createElement(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: onClose,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, \"NON\")));\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      onClick: function onClick(a) {\n        confirmAlert({\n          customUI: function customUI(_ref2) {\n            var onClose = _ref2.onClose;\n            return React.createElement(\"div\", {\n              className: \"custom-ui\",\n              id: \"popup\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              id: \"entree\",\n              className: \"modif\",\n              value: user.prix,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              id: \"erreur\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }), React.createElement(\"center\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: function onClick() {\n                if (isNaN(document.getElementById(\"entree\").value)) {\n                  var valid = \"Entrer un nombre\";\n                  document.getElementById('erreur').innerHTML = valid;\n                } else {\n                  var valid = \"\";\n                  document.getElementById('erreur').innerHTML = valid;\n                  props.editRow(a);\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, \"Ok\"), React.createElement(\"a\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141\n              },\n              __self: this\n            }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n              className: \"btn btn-dark\",\n              onClick: onClose,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, \"Annuler\")));\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Edit\")));\n  }) : React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: function onClick() {\n      console.log(props.user.prix);\n      var i = props.user.prix;\n      document.getElementById(\"somme\").innerHTML = i;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"TOTAL\"), React.createElement(\"div\", {\n    id: \"somme\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }));\n};\n\nexport default confirm;","map":{"version":3,"sources":["/home/mirantodell/Bureau/my-product/src/Component/tableau/tableau.jsx"],"names":["confirmAlert","React","Component","useState","confirm","props","initial","id","prod","prix","user","setUser","changed","event","target","name","value","users","length","map","customUI","onClose","deleteUser","a","isNaN","document","getElementById","valid","innerHTML","editRow","console","log","i"],"mappings":"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","sourcesContent":["import { confirmAlert } from 'react-confirm-alert'; // Import\nimport React, { Component, useState } from 'react'\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\nconst confirm = props => {\n\n  const initial = { id: null, prod: '', prix: '' }\n\n  const [ user, setUser ] = useState(initial)\n        const changed = event => {\n\n           const { name, value } = event.target\n        \n           setUser({ ...user, [name]: value })\n     }\n  \n    // const submit = (a) => {\n    //   confirmAlert({\n    //     customUI: ({ onClose }) => {\n    //       return (  \n    //         <div className=\"custom-ui\" id=\"popup\">\n    //           <h6>Suppression Produit</h6><br/><br/>\n    //           <h6 value={ user.prod }></h6><br/><br/>\n    //         <center>\n    //           <button className=\"btn btn-dark\"\n    //             onClick={() => {\n    //               props.deleteUser(a);\n    //               onClose();\n    //             }}\n    //           >\n    //             OUI\n    //           </button><a>&nbsp;&nbsp;</a>\n    //           <button  className=\"btn btn-dark\" onClick={onClose}>NON</button>\n    //           </center>\n    //         </div>\n    //       );\n    //     }\n    //   })\n    // };\n\n    // const submit1 = (a) => {\n    //     confirmAlert({\n    //         customUI: ({ onClose }) => {\n    //           return (  \n               \n    //             <div className=\"custom-ui\" id=\"popup\">\n    //               <input id=\"entree\" className=\"modif\" value={user.prod} onChange={changed}/><br/><br/>\n    //               <div id=\"erreur\"></div><br/>\n    //             <center>\n    //               <button className=\"btn btn-dark\"\n    //                 onClick={() => {\n    //                   if (isNaN(document.getElementById(\"entree\").value)) {\n    //                     var valid=\"Entrer un nombre\";\n    //                     document.getElementById('erreur').innerHTML= valid;\n    //                  } else {\n    //                     var valid=\"\";\n    //                     document.getElementById('erreur').innerHTML= valid;\n    //                     props.editRow(a);\n                        \n    //                   }\n    //                 }}\n    //               >\n    //                 Ok\n    //               </button><a>&nbsp;&nbsp;</a>\n    //               <button  className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n    //               </center>\n    //             </div>\n    //           );\n    //         }\n    //       })\n    // };\n            return (\n                <center>\n                    <table class=\"table table-bordered\">\n                    <thead>\n                        <tr className=\"tab\">\n                            <th>id</th>\n                            <th>Produits</th>\n                            <th>Prix</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.users.length > 0 ? (\n                        props.users.map(user => (\n                                <tr key={user.id}>\n                                    <td>{user.id}</td>\n                                    <td>{user.prod}</td>\n                                    <td id=\"prix\">{user.prix}</td>\n                                    <td>\n                                        <button className=\"btn btn-danger\"\n                                        onClick={ () => {\n                                          confirmAlert({\n                                            customUI: ({ onClose }) => {\n                                              return (  \n                                                <div className=\"custom-ui\" id=\"popup\">\n                                                  <h6>Suppression Produit</h6><br/>\n                                                  <h6>{user.prod}</h6><br/>\n                                                <center>\n                                                  <button className=\"btn btn-dark\"\n                                                    onClick={() => {\n                                                      props.deleteUser(user);\n                                                      onClose();\n                                                    }}\n                                                  >\n                                                    OUI\n                                                  </button><a>&nbsp;&nbsp;</a>\n                                                  <button  className=\"btn btn-dark\" onClick={onClose}>NON</button>\n                                                  </center>\n                                                </div>\n                                              );\n                                            }\n                                          })\n                                        }\n                                        }\n                                        >X</button>\n                                        <a>&nbsp;</a><button type=\"submit\" className=\"btn btn-success\"\n                                          onClick={(a) => {\n                                            confirmAlert({\n                                                customUI: ({ onClose }) => {\n                                                  return (  \n                                                   \n                                                    <div className=\"custom-ui\" id=\"popup\">\n                                                      <input id=\"entree\" className=\"modif\" value={user.prix}></input><br/>\n                                                      <div id=\"erreur\"></div><br/>\n                                                    <center>\n                                                      <button className=\"btn btn-dark\"\n                                                        onClick={() => {\n                                                          if (isNaN(document.getElementById(\"entree\").value)) {\n                                                            var valid=\"Entrer un nombre\";\n                                                            document.getElementById('erreur').innerHTML= valid;\n                                                         } else {\n                                                            var valid=\"\";\n                                                            document.getElementById('erreur').innerHTML= valid;\n                                                            props.editRow(a);\n                                                            \n                                                          }\n                                                        }}\n                                                      >\n                                                        Ok\n                                                      </button><a>&nbsp;&nbsp;</a>\n                                                      <button  className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n                                                      </center>\n                                                    </div>\n                                                  );\n                                                }\n                                              })\n                                        }\n                                      }\n                                         >Edit</button>\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr>\n                                <td colSpan={4}></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n                <button className=\"btn btn-warning\" onClick={ () => {\n                  console.log(props.user.prix);\n                  \n                  var i=props.user.prix\n                  document.getElementById(\"somme\").innerHTML=i\n                }}>TOTAL</button>\n                <div id=\"somme\"></div>\n                </center>\t\n            );\n      }\n\n\t\nexport default confirm;"]},"metadata":{},"sourceType":"module"}