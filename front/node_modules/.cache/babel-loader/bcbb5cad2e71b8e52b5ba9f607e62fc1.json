{"ast":null,"code":"import _classCallCheck from \"/home/mirantodell/Bureau/projet/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mirantodell/Bureau/projet/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mirantodell/Bureau/projet/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mirantodell/Bureau/projet/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mirantodell/Bureau/projet/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mirantodell/Bureau/projet/front/src/Component/Liste.js\";\nimport React, { Component } from \"react\";\nimport './liste.css';\n\nvar Liste =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Liste, _Component);\n\n  function Liste(props) {\n    var _this;\n\n    _classCallCheck(this, Liste);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Liste).call(this, props));\n    _this.state = {\n      apiResponse: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Liste, [{\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:8080/List\").then(function (res) {\n        return res.text();\n      }).then(function (res) {\n        return _this2.setState({\n          apiResponse: res\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.callAPI();\n    }\n  }, {\n    key: \"transf\",\n    value: function transf() {\n      var test = this.state.apiResponse;\n      var test2 = JSON.parse(test);\n      var tab = eval('(' + test + ')');\n      return test2;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          var test = _this3.state.apiResponse;\n          console.log(JSON.parse(test));\n          var test2 = JSON.parse(test);\n          var tab = eval('(' + test + ')');\n          console.log(\"==\", tab);\n\n          for (var i = 0; i < test2.length; i++) {\n            var h = \"http://localhost:8080\" + test2[i].image;\n            document.getElementById('va').innerHTML += \"<p id='nom'>\" + \"<p id='im'>\" + \" <img className='bla' src='\" + h + \"'width='50'/>\" + \"</p>\" + \"<br/>\" + \"Nom :\" + test2[i].nom + \" \" + \"<br/>\" + \"Prenom :\" + test2[i].prenom + \"</p>\" + \"<br/>\";\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Liste\"), React.createElement(\"div\", {\n        id: \"va\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.transf().map(function (im) {\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"http://localhost:8080\" + im.image,\n          width: \"50\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, im.nom), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, im.prenom));\n      })));\n    }\n  }]);\n\n  return Liste;\n}(Component);\n\nexport default Liste;","map":{"version":3,"sources":["/home/mirantodell/Bureau/projet/front/src/Component/Liste.js"],"names":["React","Component","Liste","props","state","apiResponse","fetch","then","res","text","setState","callAPI","test","test2","JSON","parse","tab","eval","console","log","i","length","h","image","document","getElementById","innerHTML","nom","prenom","transf","map","im"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;IAIMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AAFiB;AAGlB;;;;8BAES;AAAA;;AACNC,MAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACE,QAAL,CAAc;AAAEL,UAAAA,WAAW,EAAEG;AAAf,SAAd,CAAJ;AAAA,OAFb;AAGH;;;yCACoB;AACnB,WAAKG,OAAL;AACH;;;6BACO;AACN,UAAIC,IAAI,GAAC,KAAKR,KAAL,CAAWC,WAApB;AACA,UAAIQ,KAAK,GAACC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAV;AACA,UAAII,GAAG,GAACC,IAAI,CAAC,MAAML,IAAN,GAAa,GAAd,CAAZ;AACA,aAAOC,KAAP;AACD;;;6BAEU;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAQ,QAAA,OAAO,EAAE,mBAAK;AACnB,cAAID,IAAI,GAAC,MAAI,CAACR,KAAL,CAAWC,WAApB;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;AACD,cAAIC,KAAK,GAACC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAV;AACA,cAAII,GAAG,GAACC,IAAI,CAAC,MAAML,IAAN,GAAa,GAAd,CAAZ;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBH,GAAjB;;AAGC,eAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,KAAK,CAACQ,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAG7B,gBAAIE,CAAC,GAAC,0BAAwBT,KAAK,CAACO,CAAD,CAAL,CAASG,KAAvC;AACAC,YAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,IAAyC,iBAAe,aAAf,GAA6B,6BAA7B,GAA2DJ,CAA3D,GAA8D,eAA9D,GAA8E,MAA9E,GAAsF,OAAtF,GAA+F,OAA/F,GAAuGT,KAAK,CAACO,CAAD,CAAL,CAASO,GAAhH,GAAoH,GAApH,GAAwH,OAAxH,GAAgI,UAAhI,GAA2Id,KAAK,CAACO,CAAD,CAAL,CAASQ,MAApJ,GAA4J,MAA5J,GAAmK,OAA5M;AAED;AAED,SAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAsBE;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKC,MAAL,GAAcC,GAAd,CAAkB,UAASC,EAAT,EAAY;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAE,0BAAwBA,EAAE,CAACR,KAArC;AAA4C,UAAA,KAAK,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMQ,EAAE,CAACJ,GAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMI,EAAE,CAACH,MAAT,CAHJ;AAKP,OANA,CAFD,CAtBF,CADF;AAwED;;;;EA/FiB3B,S;;AAkGpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './liste.css'\n\n\n\nclass Liste extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n  }\n\n  callAPI() {\n      fetch(\"http://localhost:8080/List\")\n          .then(res => res.text())\n          .then(res => this.setState({ apiResponse: res }));\n  }\n  componentWillMount() {\n    this.callAPI();\n}\ntransf(){\n  var test=this.state.apiResponse\n  var test2=JSON.parse(test)\n  var tab=eval('(' + test + ')');  \n  return test2\n}\n \n  render() {\n    return (\n      <div>    \n         <button onClick={()=> {\n            var test=this.state.apiResponse\n            console.log(JSON.parse(test));\n           var test2=JSON.parse(test)\n           var tab=eval('(' + test + ')');\n           console.log(\"==\",tab);\n           \n            \n            for(let i=0;i<test2.length;i++){ \n             \n              \n              let h=\"http://localhost:8080\"+test2[i].image\n              document.getElementById('va').innerHTML+=\"<p id='nom'>\"+\"<p id='im'>\"+\" <img className='bla' src='\"+h+ \"'width='50'/>\"+\"</p>\"+ \"<br/>\" +\"Nom :\"+test2[i].nom+\" \"+\"<br/>\"+\"Prenom :\"+test2[i].prenom+ \"</p>\"+\"<br/>\" \n\n            }\n            \n           }}>Liste</button>\n\n          \n\n\n        <div id=\"va\">\n        \n        {this.transf().map(function(im){\n                <div>\n                    <img src={\"http://localhost:8080\"+im.image} width='50'/>\n                    <div>{im.nom}</div>\n                    <div>{im.prenom}</div>\n                </div>     \n        }  \n              )}\n        </div>\n        {/* <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n            <ol class=\"carousel-indicators\">\n              {\n                this.transf().map((im,index)=>(\n                  <li data-target=\"#myCarousel\" data-slide-to={index} class=\"active\"></li>\n                )\n                \n              )}\n              \n            </ol> */}\n\n            {/* <div class=\"carousel-inner\">\n              <div class=\"item active\">\n              { this.transf().length?this.transf().map(im=>(\n                <div>\n                    <img src={\"http://localhost:8080\"+im.image} width='50' alt=\"Los Angeles\"/>\n                    <div>{im.nom}</div>\n                    <div>{im.prenom}</div>\n                </div>\n              )\n                \n              ):(<div></div>)}\n              </div>\n\n            </div>\n            <a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">\n              <span class=\"glyphicon glyphicon-chevron-left\"></span>\n              <span class=\"sr-only\">Previous</span>\n            </a>\n            <a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">\n              <span class=\"glyphicon glyphicon-chevron-right\"></span>\n              <span class=\"sr-only\">Next</span>\n            </a>\n        </div> \n        */}\n       \n      </div>\n    );\n  }\n}\n\nexport default Liste;"]},"metadata":{},"sourceType":"module"}